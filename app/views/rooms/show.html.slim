= content_for :head do
  script src='http://cdn.pubnub.com/pubnub-3.5.3.min.js'

= content_for :page_bottom do
  javascript:
    (function(){
      var pubnub = PUBNUB.init({ 'subscribe_key' : 'sub-c-b8f67c24-f34b-11e2-a11a-02ee2ddab7fe' });

      pubnub.subscribe({
        channel: "#{@room.requested_channel}",
        message: function(m) {
          $('#messages_requested').text(m);
        },
        presence: function(message, event, channel) {
          // console.log("Channel: ", channel);
          // console.log("Join/Leave/Timeout: ", message.action);
          // console.log("Occupancy: ", message.occupancy);
          // console.log("User ID: ", message.uuid);
          $('#connected').text(message.occupancy);
        }
      });

      pubnub.subscribe({
        channel: "#{@room.posted_channel}",
        message: function(m) {
          $('#messages_posted').text(m);
        }
      });

      pubnub.subscribe({
        channel: "#{@room.chat_channel}",
        message: function(m) {
          $('#messages').append(m);
        }
      });
    })();

ul.breadcrumb
  li
    = link_to "Back To Lobby", rooms_url
    span.divider= "/"
  li.active= @room.name
- if params[:non_atomic]
  = link_to "Go To Atomic Version", room_url(@room), class: 'btn', style: 'margin-bottom: 1em;'
  .alert.alert-error This room does not add messages atomically, the maximum messages limit can be violated
- else
  = link_to "Go To Non-Atomic Version", room_url(@room, non_atomic: true), class: 'btn', style: 'margin-bottom: 1em;'

.hero-unit style='text-align: center;'
  p Scan this with a qr code reader to join:
  = image_tag("https://chart.googleapis.com/chart?cht=qr&chs=300x300&chl=#{request.url}&chld=H|0")
  h1 Welcome to #{@room.name}

ul#messages.media-list
  = render partial: '/messages/message', collection: @room.messages

= form_for @room.messages.build do |f|
  - if params[:non_atomic]
    = hidden_field_tag :non_atomic, true
  = f.hidden_field :room_id, value: @room.id
  .row
    .span3
      .well
        h4 Connections:
        span#connected.badge.badge-info 1
    .span3
      .well
        h4 Requested:
        span#messages_requested.badge.badge-success= @room.messages_requested.value
    .span3
      .well
        h4 Posted:
        span#messages_posted.badge.badge-info= @room.messages_posted.value
    .span3
      .well
        h4 Limit:
        span#max_messages.badge.badge-important= @room.max_messages

  = f.text_field :content, class: 'chat-input'
  .controls
    = f.submit "Post Message", class: 'btn btn-primary btn-large'
